openapi: 3.1.0
info:
  title: Forum Engine
  description: |-
    Примерный API движка Форума/Доски объявлений
  version: 1.0.0
servers:
  - url: http://localhost/api/v1
tags:
  - name: Topic API
    description: API for regular users
  - name: Message API
    description: API for regular users
  - name: Admin API
    description: API for administrators
  - name: Client API
    description: API for regular users
  - name: Common API
    description: API for regular users and admins
paths:
  /topic:
    post:
      tags:
        - Topic API
        - Client API
      summary: Create a new topic
      description: Create a new topic to the store
      operationId: CreateTopic
      requestBody:
        description: Create a new topic
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTopic'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicWithMessages'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
    put:
      tags:
        - Topic API
        - Admin API
      summary: Update an existing topic
      description: Update an existing topic by Id
      operationId: updateTopic
      requestBody:
        description: Update an existent topic in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTopic'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopicWithMessages'
        '404':
          description: Topic not found
        '422':
          description: Validation exception
    get:
      tags:
        - Topic API
        - Common API
      summary: Show all topics
      description: View all topics
      operationId: listAllTopics
      parameters:
        - name: pageSize
          in: query
          description: page size
          schema:
            type: integer
            format: int64
            minimum: 1
            default: 10
        - name: pageNumber
          in: query
          description: page number
          schema:
            type: integer
            format: int64
            minimum: 0
            default: 0
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageListTopic'
  /topic/{topicId}:
    delete:
      tags:
        - Topic API
        - Admin API
      summary: Delete topic
      description: Delete topic
      operationId: deleteTopic
      parameters:
        - name: topicId
          in: path
          description: ID of topic
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicWithMessages'
        '400':
          description: Invalid ID supplied
        '404':
          description: Topic not found
    get:
      tags:
        - Topic API
        - Common API
      summary: View messages of topic
      description: Shows all messages in topic
      operationId: ListTopicMessages
      parameters:
        - name: topicId
          in: path
          description: ID of topic
          required: true
          schema:
            type: string
            format: uuid
        - name: pageSize
          in: query
          description: page size
          schema:
            type: integer
            format: int64
            minimum: 1
            default: 10
        - name: pageNumber
          in: query
          description: page number
          schema:
            type: integer
            format: int64
            minimum: 0
            default: 0
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicWithMessagesPage'
        '400':
          description: Invalid ID supplied
        '404':
          description: Topic not found

  /topic/{topicId}/message:
    post:
      tags:
        - Topic API
        - Client API
      summary: Create a new message
      description: Create a new message in topic
      operationId: CreateMessage
      parameters:
        - name: topicId
          in: path
          description: ID of topic where add the message
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Create a new topic
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMessage'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicWithMessages'
        '400':
          description: Invalid ID supplied
        '404':
          description: Topic not found
    put:
      tags:
        - Topic API
        - Common API
      summary: Update an existing message
      description: Update an existing message by Id
      operationId: updateMessage
      parameters:
        - name: topicId
          in: path
          description: ID of topic where update the message
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Update an existent message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMessage'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TopicWithMessages'
        '400':
          description: Invalid ID supplied
        '404':
          description: Topic or Message not found
        '422':
          description: Validation exception

  /message/{messageId}:
    delete:
      tags:
        - Message API
        - Common API
      summary: Delete an existing message
      description: Delete an existing message by Id
      operationId: deleteMessage
      parameters:
        - name: messageId
          in: path
          description: ID of message to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Message not found
        '422':
          description: There is last message
components:
  schemas:
    Topic:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
          examples: [ 19a69803-97d8-4e71-bc91-d3b7151ab30d ]
        name:
          type: string
          examples: [ Тестовая тема ]
        created:
          type: string
          examples: [ 2024-12-03T15:23:17+03:00 ]
    TopicWithMessages:
      required:
        - id
        - name
        - messages
      type: object
      properties:
        id:
          type: string
          format: uuid
          examples: [ 19a69803-97d8-4e71-bc91-d3b7151ab30d ]
        name:
          type: string
          examples: [ Тестовая тема ]
        created:
          type: string
          examples: [ 2024-12-03T15:23:17+03:00 ]
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
    Message:
      required:
        - id
        - text
      type: object
      properties:
        id:
          type: string
          format: uuid
          examples: [ 2603eb0f-9295-402b-a958-8934bf400119 ]
        text:
          type: string
          examples: [ Первое сообщение ]
        author:
          type: string
          examples: [ Ivan ]
        created:
          type: string
          examples: [ 2024-12-03T15:23:17+03:00 ]
    NewMessage:
      required:
        - text
      type: object
      properties:
        text:
          type: string
          examples: [ Первое сообщение ]
    UpdateMessage:
      required:
        - id
        - text
      type: object
      properties:
        id:
          type: string
          format: uuid
          examples: [ 2603eb0f-9295-402b-a958-8934bf400119 ]
        text:
          type: string
          examples: [ Первое сообщение ]
    NewTopic:
      required:
        - topicName
        - message
      type: object
      properties:
        topicName:
          type: string
          examples: [ Тестовая тема ]
        message:
          $ref: '#/components/schemas/NewMessage'
    UpdateTopic:
      required:
        - id
        - topicName
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 2603eb0f-9295-402b-a958-8934bf400119
        topicName:
          type: string
          example: Тестовая тема

    PageMessage:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        totalElements:
          type: integer
          format: int64
    TopicWithMessagesPage:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        created:
          type: string
        messages:
          $ref: '#/components/schemas/PageMessage'
    PageListTopic:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Topic'
        totalElements:
          type: integer
          format: int64